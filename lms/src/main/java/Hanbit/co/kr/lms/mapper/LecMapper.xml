<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Hanbit.co.kr.lms.mapper.LecMapper">
	<!-- 강의 등록 -->
	<insert id="insertLec" parameterType="Hanbit.co.kr.lms.vo.Lec">
	INSERT INTO lec(
		 lecture_name
		,lecture_room_name
		,manager_id
		,lec_plan_no
		,subject_name
		,registration_number
		,registration_pass_score
		,difficulty
		,lec_cost
		,lec_phone
		,create_date
		,update_date
	) VALUES(
		 #{lectureName}
		,#{lectureRoomName}
		,#{managerId}
		,#{lecPlanNo}
		,#{subjectName}
		,#{registrationNumber}
		,#{registrationPassScore}
		,#{difficulty}
		,#{lecCost}
		,#{lecPhone}
		,NOW()
		,NOW()
	) 
	</insert>
	<!-- 과목 정보 -->
	<select id="subjectList" resultType="Hanbit.co.kr.lms.vo.Subject">
		SELECT 
			subject_name subjectName
			,subject_subscription subjectSubscription
			,create_date createDate
		FROM subject
	</select>
	
	<!-- 강의계획서 정보 -->
	<select id="lecPlanList" resultType="Hanbit.co.kr.lms.vo.LecPlan">
		SELECT
			 lp.lec_plan_no lecPlanNo
			,lp.teacher_id teacherId
			,lp.lec_plan_name lecPlanName
			,lp.lec_state lecState
			,lp.create_date createDate
		FROM lec_plan lp
			INNER JOIN lec l
			ON l.lec_plan_no = lp.lec_plan_no
		GROUP BY l.lec_plan_no
	</select>
	
	<!-- 강의실 정보 -->
	<select id="lectureRoomList" resultType="Hanbit.co.kr.lms.vo.LectureRoom">
		SELECT 
			 lecture_room_name lectureRoomName
			,lecture_room_addr1 lectureRoomAddr1
			,lecture_room_addr2 lectureRoomAddr2
			,lecture_room__number lectureRoomNumber
			,create_date createDate
		FROM lecture_room
	</select>
	
	<!-- 강의 수 -->
	<select id="totalCount" resultType="int">
	<![CDATA[
		SELECT COUNT(*) cnt
		FROM lec l
			LEFT JOIN time_table tt
			ON l.lecture_name = tt.lecture_name
		WHERE NOW() < tt.begin_class
	]]>
	</select>
	
	<!-- 개강일 이전 강의 리스트 -->
	<select id="getLecListByPage" parameterType="java.util.Map" resultType="Hanbit.co.kr.lms.vo.Lec">
	<![CDATA[
		SELECT 
			 l.lecture_name lectureName
			,l.subject_name subjectName
			,l.registration_number registrationNumber
			,l.difficulty
			,l.create_date createDate
			,DATE(tt.begin_class) beginClass
		FROM lec l
			LEFT JOIN time_table tt
			ON l.lecture_name = tt.lecture_name
			WHERE NOW() < tt.begin_class
		ORDER BY tt.begin_class DESC
		LIMIT #{beginRow}, #{rowPerPage}
	]]>
	</select>
</mapper>