<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Hanbit.co.kr.lms.mapper.LecMapper">

	<!-- 강의 삭제 -->
	<delete id="getDeleteLec" parameterType="String">
		DELETE
		FROM lec
		WHERE lecture_name = #{lectureName}
	</delete>
	
	<!-- 강의 수정 -->
	<update id="getUpdateLec" parameterType="Hanbit.co.kr.lms.vo.Lec">
			UPDATE lec SET
				  lecture_name = #{lectureName}
				, lecture_room_name = #{lectureRoomName} 
				, manager_id = #{managerId}
				, lec_plan_no = #{lecPlanNo}
				, subject_name = #{subjectName}
				, registration_number = #{registrationNumber}
				, registration_pass_score = #{registrationPassScore}
				, difficulty = #{difficulty}
				, lec_cost = #{lecCost}
				, lec_phone = #{lecPhone}
				, update_date = NOW()
			WHERE lecture_name = #{lectureName}
	</update>
	<!-- 강의 상세보기 -->
	<select id="getLecOne" parameterType="String" resultType="Hanbit.co.kr.lms.vo.Lec">
		SELECT 
			 l.lecture_name lectureName
			,l.lecture_room_name lectureRoomName
			,l.subject_name subjectName
			,l.registration_number registrationNumber
			,l.registration_pass_score registrationPassScore
			,l.lec_plan_no lecPlanNo
			,l.lec_cost lecCost
			,l.lec_phone lecPhone
			,l.difficulty
			,l.create_date createDate
			,DATE(tt.begin_class) beginClass
			,DATE(tt.end_class) endClass
			,tt.start_time startTime
			,tt.end_time endTime
			,tt.lunch_time lunchTime
		FROM lec l
			LEFT JOIN time_table tt
			ON l.lecture_name = tt.lecture_name
		WHERE l.lecture_name = #{lectureName}
		ORDER BY l.create_date DESC
	</select>
	<!-- 일정표 등록 -->
	<insert id="insertTimeTable" parameterType="Hanbit.co.kr.lms.vo.TimeTable">
		INSERT INTO time_table(
			 lecture_name
			,start_time
			,end_time
			,lunch_time
			,begin_class
			,end_class
			,create_date
			,update_date
		) VALUES(
			 #{lectureName}
			,#{startTime}
			,#{endTime}
			,#{lunchTime}
			,#{beginClass}
			,#{endClass}
			,NOW()
			,NOW()
		)
	</insert>
	
	<!-- 강의 등록 -->
	<insert id="insertLec" parameterType="Hanbit.co.kr.lms.vo.Lec">
	INSERT INTO lec(
		 lecture_name
		,lecture_room_name
		,manager_id
		,lec_plan_no
		,subject_name
		,registration_number
		,registration_pass_score
		,difficulty
		,lec_cost
		,lec_phone
		,create_date
		,update_date
	) VALUES(
		 #{lectureName}
		,#{lectureRoomName}
		,#{managerId}
		,#{lecPlanNo}
		,#{subjectName}
		,#{registrationNumber}
		,#{registrationPassScore}
		,#{difficulty}
		,#{lecCost}
		,#{lecPhone}
		,NOW()
		,NOW()
	)
	</insert>
	<!-- 과목 정보 -->
	<select id="subjectList" resultType="Hanbit.co.kr.lms.vo.Subject">
		SELECT 
			subject_name subjectName
			,subject_subscription subjectSubscription
			,create_date createDate
		FROM subject
	</select>
	
	<!-- 강의별 강의계획서 정보 -->
	<select id="lecPlan" resultType="Hanbit.co.kr.lms.vo.LecPlan">
			SELECT
			 lp.lec_plan_no lecPlanNo
			,lp.teacher_id teacherId
			,lp.lec_plan_name lecPlanName
			,lp.lec_state lecState
			,lp.create_date createDate
		FROM lec_plan lp
			INNER JOIN lec l
				ON l.lec_plan_no = lp.lec_plan_no
		GROUP BY l.lec_plan_no
	</select>
	
	<!-- 강의계획서 정보 -->
	<select id="lecPlanList" resultType="Hanbit.co.kr.lms.vo.LecPlan">
		SELECT
			 lp.lec_plan_no lecPlanNo
			,lp.teacher_id teacherId
			,lp.lec_plan_name lecPlanName
			,lp.lec_state lecState
			,lp.create_date createDate
		FROM lec_plan lp
	</select>
	
	<!-- 강의실 정보 -->
	<select id="lectureRoomList" resultType="Hanbit.co.kr.lms.vo.LectureRoom">
		SELECT 
			 lecture_room_name lectureRoomName
			,lecture_room_addr1 lectureRoomAddr1
			,lecture_room_addr2 lectureRoomAddr2
			,create_date createDate
		FROM lecture_room
	</select>
	
	<!-- 강의 수 -->
	<select id="totalCount" resultType="int">
		<![CDATA[
			SELECT COUNT(*) cnt
			FROM lec l
				LEFT JOIN time_table tt
				ON l.lecture_name = tt.lecture_name
			WHERE NOW() < tt.begin_class
		]]>
	</select>
	
	<!-- 개강일 이전 강의 리스트 -->
	<select id="getLecListByPage" parameterType="java.util.Map" resultType="Hanbit.co.kr.lms.vo.Lec">
		<![CDATA[
			SELECT 
				 l.lecture_name lectureName
				,l.subject_name subjectName
				,l.registration_number registrationNumber
				,l.difficulty
				,l.create_date createDate
				,tt.begin_class beginClass
			FROM lec l
				LEFT JOIN time_table tt
				ON l.lecture_name = tt.lecture_name
				WHERE NOW() < tt.begin_class
			ORDER BY tt.begin_class DESC
			LIMIT #{beginRow}, #{rowPerPage}
		]]>
	</select>
</mapper>