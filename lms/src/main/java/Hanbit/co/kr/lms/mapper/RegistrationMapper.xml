<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Hanbit.co.kr.lms.mapper.RegistrationMapper">
	<select id="selectRegistration"
			parameterType="java.lang.String"
			resultType="Hanbit.co.kr.lms.vo.Registration">
		SELECT registration_no registrationNo
				,lecture_Name lectureName
				,payment
				,create_date createDate
		FROM registration
		WHERE student_id = #{studentId}
			
	</select>
	
	<insert id="insertRegistration"
			parameterType="Hanbit.co.kr.lms.vo.Registration">
		INSERT INTO registration(
		lecture_name
		,student_id
		,payment
		,create_date
		,update_date
		) VALUES(
			#{lectureName}
			,#{studentId}
			,0
			,NOW()
			,NOW()
		);
	</insert>
	
	
	<!-- 학생-수강 상세보기 -->
	<select id="selectRegistrationByStudent"
			parameterType="java.lang.String"
			resultType="java.util.HashMap">
		
			SELECT
				 r.lecture_name lectureName
				,r.registration_no registrationNo
				,l.lecture_room_name lectureRoomName
				,l.lec_phone lecPhone
				,l.subject_name subjectName
				,l.lec_cost lecCost
				,l.difficulty difficulty
				,l.registration_pass_score regiPassScore
				,l.registration_number registrationNumber
				,r.payment payment
				,r.create_date createDate
				,tt.begin_class beginClass
				,tt.end_class endClass
				,tt.start_time startTime
				,tt.end_time endTime
				,tt.lunch_time lunchTime
				,t.teacher_name teacherName
			FROM registration r 
			INNER JOIN lec l 
				ON  r.lecture_name = l.lecture_name
			INNER JOIN time_table tt
				ON l.lecture_name = tt.lecture_name
			INNER JOIN lec_plan lp
				ON lp.lecture_Name = r.lecture_Name
			INNER JOIN teacher t
				ON lp.teacher_id = t.teacher_id
			WHERE r.student_id= #{studentId} AND r.lecture_name = #{lectureName}	
				
	</select>
	<update id="updatePayment"
			parameterType="Hanbit.co.kr.lms.vo.Registration">
		UPDATE registration SET
			payment = #{payment}
		WHERE registration_no = #{registrationNo}
	</update>
	<select id="selectRegistrationByLec"
			parameterType="java.lang.String"
			resultType="Map">
		SELECT 
			r.registration_no registrationNo
			,r.lecture_name lectureName
			,r.student_id studentId
			,r.payment payment
			,r.create_date createDate
			,r.student_id studentId
			,s.student_name studentName
		FROM registration r 
		INNER JOIN student s
		ON s.student_id = r.student_id
		INNER JOIN time_table t
		ON t.lecture_name = r.lecture_name
		INNER JOIN lec_plan lp
		ON r.lecture_name = lp.lecture_name
		<where>
			t.begin_class > NOW()
				 AND lp.lec_state='T'
				
			<choose>
				<when test="lectureName = ''">
				
				</when>
				<otherwise>
					AND r.lecture_name= #{lectureName};
					
				</otherwise>
			</choose>
			
		</where>
		
	</select>
	
	<select id="beforeLecture"
			resultType="String">
		SELECT lecture_name
			 FROM time_table
				WHERE begin_class > NOW();
	</select>
	<delete id="deleteRegistration"
			parameterType="Hanbit.co.kr.lms.vo.Registration">
		DELETE FROM registration
			WHERE registration_no = #{registrationNo};		
			
	</delete>
</mapper>